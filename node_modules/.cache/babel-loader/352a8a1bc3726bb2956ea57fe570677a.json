{"ast":null,"code":"var _jsxFileName = \"/home/ruta/Documents/my_websites/auction/src/components/RegisterUser/FirstPage.jsx\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport EmailInput from '../Account/EmailInput';\nimport PasswordInput from '../Account/PasswordInput';\nimport isEmailValid from '../../services/emailValidator';\n\nclass FirstPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errors: {}\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  validate() {\n    const _this$props = this.props,\n          password = _this$props.password,\n          repeatPassword = _this$props.repeatPassword,\n          email = _this$props.email;\n    const errors = {};\n\n    if (isEmailValid(email) === false) {\n      errors.email = 'Neteisingas el. pašto adresas';\n    }\n\n    if (password.length < 12) {\n      errors.password = 'Slaptažodis turi susidaryti bent iš 12-os simbolių.';\n    }\n\n    if (repeatPassword !== password) {\n      errors.repeatPassword = 'Slaptažodis pakartotas blogai.';\n    }\n\n    this.setState({\n      errors\n    });\n    return Object.keys(errors).length === 0;\n  }\n\n  handleSubmit(e) {\n    const onSubmit = this.props.onSubmit;\n    return this.validate() ? onSubmit(e) : () => {};\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          onChange = _this$props2.onChange,\n          password = _this$props2.password,\n          repeatPassword = _this$props2.repeatPassword,\n          email = _this$props2.email;\n    const errors = this.state.errors;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(EmailInput, {\n      onChange: onChange,\n      error: errors.email,\n      value: email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(PasswordInput, {\n      onChange: onChange,\n      error: errors.password,\n      value: password,\n      name: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(PasswordInput, {\n      onChange: onChange,\n      error: errors.repeatPassword,\n      value: repeatPassword,\n      name: \"repeatPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"button\",\n      onClick: this.handleSubmit,\n      variant: \"contained\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"T\\u0119sti\"));\n  }\n\n}\n\nFirstPage.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  password: PropTypes.string.isRequired,\n  repeatPassword: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired\n};\nexport default FirstPage;","map":{"version":3,"sources":["/home/ruta/Documents/my_websites/auction/src/components/RegisterUser/FirstPage.jsx"],"names":["React","Button","PropTypes","EmailInput","PasswordInput","isEmailValid","FirstPage","Component","constructor","props","state","errors","handleSubmit","bind","validate","password","repeatPassword","email","length","setState","Object","keys","e","onSubmit","render","onChange","propTypes","func","isRequired","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport EmailInput from '../Account/EmailInput';\nimport PasswordInput from '../Account/PasswordInput';\nimport isEmailValid from '../../services/emailValidator';\n\nclass FirstPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      errors: {}\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  validate() {\n    const { password, repeatPassword, email } = this.props;\n\n    const errors = {};\n    if (isEmailValid(email) === false) {\n      errors.email = 'Neteisingas el. pašto adresas';\n    }\n\n    if (password.length < 12) {\n      errors.password = 'Slaptažodis turi susidaryti bent iš 12-os simbolių.';\n    }\n\n    if (repeatPassword !== password) {\n      errors.repeatPassword = 'Slaptažodis pakartotas blogai.';\n    }\n\n    this.setState({ errors });\n\n    return Object.keys(errors).length === 0;\n  }\n\n  handleSubmit(e) {\n    const { onSubmit } = this.props;\n\n    return this.validate() ? onSubmit(e) : () => {};\n  }\n\n  render() {\n    const { onChange, password, repeatPassword, email } = this.props;\n    const { errors } = this.state;\n\n    return (\n      <React.Fragment>\n        <EmailInput onChange={onChange} error={errors.email} value={email} />\n        <PasswordInput\n          onChange={onChange}\n          error={errors.password}\n          value={password}\n          name=\"password\"\n        />\n        <PasswordInput\n          onChange={onChange}\n          error={errors.repeatPassword}\n          value={repeatPassword}\n          name=\"repeatPassword\"\n        />\n        <Button type=\"button\" onClick={this.handleSubmit} variant=\"contained\" color=\"primary\">\n          Tęsti\n        </Button>\n      </React.Fragment>\n    );\n  }\n}\n\nFirstPage.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  password: PropTypes.string.isRequired,\n  repeatPassword: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired\n};\n\nexport default FirstPage;\n"]},"metadata":{},"sourceType":"module"}