{"ast":null,"code":"var _jsxFileName = \"/home/ruta/Documents/my_websites/auction/src/containers/AuthenticateUser.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport { userActions } from 'actions/user.actions';\nimport LoginForm from 'components/Account/LoginForm';\nimport EmailInput from 'components/Account/EmailInput';\nimport PasswordInput from 'components/Account/PasswordInput';\nimport RememberMeCheckbox from 'components/Account/RememberMeCheckbox';\nimport LoginButton from 'components/Account/LoginButton';\n\nclass AuthenticateUser extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n    const dispatch = this.props.dispatch;\n    dispatch(userActions.login(email, password));\n  }\n\n  render() {\n    const _this$props = this.props,\n          error = _this$props.error,\n          loggingIn = _this$props.loggingIn,\n          loggedIn = _this$props.loggedIn;\n    const _this$state2 = this.state,\n          email = _this$state2.email,\n          password = _this$state2.password;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, error && React.createElement(\"span\", {\n      style: {\n        color: 'red'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, error), loggedIn && React.createElement(\"span\", {\n      style: {\n        color: 'green'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Logged In\"), React.createElement(LoginForm, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(EmailInput, {\n      onChange: this.handleChange,\n      value: email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(PasswordInput, {\n      name: \"password\",\n      onChange: this.handleChange,\n      value: password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(RememberMeCheckbox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(LoginButton, {\n      loggingIn: loggingIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  const _state$userAuthentica = state.userAuthentication,\n        loggingIn = _state$userAuthentica.loggingIn,\n        error = _state$userAuthentica.error,\n        loggedIn = _state$userAuthentica.loggedIn;\n  return {\n    loggingIn,\n    error,\n    loggedIn\n  };\n}\n\nAuthenticateUser.defaultProps = {\n  error: null,\n  loggedIn: false,\n  loggingIn: false\n};\nAuthenticateUser.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  loggingIn: PropTypes.bool,\n  error: PropTypes.string,\n  loggedIn: PropTypes.bool\n};\nexport default connect(mapStateToProps)(AuthenticateUser);","map":{"version":3,"sources":["/home/ruta/Documents/my_websites/auction/src/containers/AuthenticateUser.jsx"],"names":["React","connect","PropTypes","userActions","LoginForm","EmailInput","PasswordInput","RememberMeCheckbox","LoginButton","AuthenticateUser","Component","constructor","props","state","email","password","handleChange","bind","handleSubmit","e","target","name","value","setState","preventDefault","dispatch","login","render","error","loggingIn","loggedIn","color","mapStateToProps","userAuthentication","defaultProps","propTypes","func","isRequired","bool","string"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport { userActions } from 'actions/user.actions';\nimport LoginForm from 'components/Account/LoginForm';\nimport EmailInput from 'components/Account/EmailInput';\nimport PasswordInput from 'components/Account/PasswordInput';\nimport RememberMeCheckbox from 'components/Account/RememberMeCheckbox';\nimport LoginButton from 'components/Account/LoginButton';\n\nclass AuthenticateUser extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const { email, password } = this.state;\n    const { dispatch } = this.props;\n\n    dispatch(userActions.login(email, password));\n  }\n\n  render() {\n    const { error, loggingIn, loggedIn } = this.props;\n    const { email, password } = this.state;\n\n    return (\n      <React.Fragment>\n        {error && <span style={{ color: 'red' }}>{error}</span>}\n        {loggedIn && <span style={{ color: 'green' }}>Logged In</span>}\n\n        <LoginForm onSubmit={this.handleSubmit}>\n          <EmailInput onChange={this.handleChange} value={email} />\n          <PasswordInput name=\"password\" onChange={this.handleChange} value={password} />\n          <RememberMeCheckbox />\n          <LoginButton loggingIn={loggingIn} />\n        </LoginForm>\n      </React.Fragment>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { loggingIn, error, loggedIn } = state.userAuthentication;\n\n  return {\n    loggingIn,\n    error,\n    loggedIn\n  };\n}\n\nAuthenticateUser.defaultProps = {\n  error: null,\n  loggedIn: false,\n  loggingIn: false\n};\n\nAuthenticateUser.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  loggingIn: PropTypes.bool,\n  error: PropTypes.string,\n  loggedIn: PropTypes.bool\n};\n\nexport default connect(mapStateToProps)(AuthenticateUser);\n"]},"metadata":{},"sourceType":"module"}