{"ast":null,"code":"const cloudinaryUrl = (options, url) => {\n  if (!url) return url;\n  let newUrl; // if cloudinary url\n\n  if (url.indexOf(\"cloudinary.com\") > -1) {\n    const aUrl = url.split(\"/\");\n    const opt = Object.keys(options).reduce((r, k) => [...r, \"\".concat(k, \"_\").concat(options[k])], []).join(\",\");\n    newUrl = [...aUrl.slice(0, aUrl.length - 2), opt, ...aUrl.slice(aUrl.length - 2)].join(\"/\");\n  } // if not cloudinary url\n\n\n  const basUrl = \"https://res.cloudinary.com/realadvisor/image/fetch\";\n  const opt = Object.keys(options).reduce((r, k) => [...r, \"\".concat(k, \"_\").concat(options[k])], []).join(\",\");\n  newUrl = [basUrl, opt, url].join(\"/\"); // use proxy\n\n  return newUrl.replace(\"res.cloudinary.com/realadvisor/image\", \"res.realadvisor.ch\");\n};\n\nexport default cloudinaryUrl;","map":{"version":3,"sources":["/home/ruta/Documents/my_websites/auction/src/components/Item/ItemOverview/utils/cloudinaryUrl.js"],"names":["cloudinaryUrl","options","url","newUrl","indexOf","aUrl","split","opt","Object","keys","reduce","r","k","join","slice","length","basUrl","replace"],"mappings":"AAAA,MAAMA,aAAa,GAAG,CAACC,OAAD,EAAUC,GAAV,KAAkB;AACtC,MAAI,CAACA,GAAL,EAAU,OAAOA,GAAP;AAEV,MAAIC,MAAJ,CAHsC,CAItC;;AACA,MAAID,GAAG,CAACE,OAAJ,CAAY,gBAAZ,IAAgC,CAAC,CAArC,EAAwC;AACtC,UAAMC,IAAI,GAAGH,GAAG,CAACI,KAAJ,CAAU,GAAV,CAAb;AACA,UAAMC,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYR,OAAZ,EACTS,MADS,CACF,CAACC,CAAD,EAAIC,CAAJ,KAAU,CAAC,GAAGD,CAAJ,YAAUC,CAAV,cAAeX,OAAO,CAACW,CAAD,CAAtB,EADR,EACsC,EADtC,EAETC,IAFS,CAEJ,GAFI,CAAZ;AAIAV,IAAAA,MAAM,GAAG,CACP,GAAGE,IAAI,CAACS,KAAL,CAAW,CAAX,EAAcT,IAAI,CAACU,MAAL,GAAc,CAA5B,CADI,EAEPR,GAFO,EAGP,GAAGF,IAAI,CAACS,KAAL,CAAWT,IAAI,CAACU,MAAL,GAAc,CAAzB,CAHI,EAIPF,IAJO,CAIF,GAJE,CAAT;AAKD,GAhBqC,CAkBtC;;;AACA,QAAMG,MAAM,GAAG,oDAAf;AACA,QAAMT,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYR,OAAZ,EACTS,MADS,CACF,CAACC,CAAD,EAAIC,CAAJ,KAAU,CAAC,GAAGD,CAAJ,YAAUC,CAAV,cAAeX,OAAO,CAACW,CAAD,CAAtB,EADR,EACsC,EADtC,EAETC,IAFS,CAEJ,GAFI,CAAZ;AAGAV,EAAAA,MAAM,GAAG,CAACa,MAAD,EAAST,GAAT,EAAcL,GAAd,EAAmBW,IAAnB,CAAwB,GAAxB,CAAT,CAvBsC,CAyBtC;;AACA,SAAOV,MAAM,CAACc,OAAP,CACL,sCADK,EAEL,oBAFK,CAAP;AAID,CA9BD;;AAgCA,eAAejB,aAAf","sourcesContent":["const cloudinaryUrl = (options, url) => {\n  if (!url) return url;\n\n  let newUrl;\n  // if cloudinary url\n  if (url.indexOf(\"cloudinary.com\") > -1) {\n    const aUrl = url.split(\"/\");\n    const opt = Object.keys(options)\n      .reduce((r, k) => [...r, `${k}_${options[k]}`], [])\n      .join(\",\");\n\n    newUrl = [\n      ...aUrl.slice(0, aUrl.length - 2),\n      opt,\n      ...aUrl.slice(aUrl.length - 2)\n    ].join(\"/\");\n  }\n\n  // if not cloudinary url\n  const basUrl = \"https://res.cloudinary.com/realadvisor/image/fetch\";\n  const opt = Object.keys(options)\n    .reduce((r, k) => [...r, `${k}_${options[k]}`], [])\n    .join(\",\");\n  newUrl = [basUrl, opt, url].join(\"/\");\n\n  // use proxy\n  return newUrl.replace(\n    \"res.cloudinary.com/realadvisor/image\",\n    \"res.realadvisor.ch\"\n  );\n};\n\nexport default cloudinaryUrl;\n"]},"metadata":{},"sourceType":"module"}