{"ast":null,"code":"import _slicedToArray from \"/home/ruta/Documents/my_websites/auction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ruta/Documents/my_websites/auction/src/components/Item/AdvancedFilters/Categories.jsx\";\nimport React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Typography from '@material-ui/core/Typography';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: '2rem',\n    paddingRight: theme.spacing(1)\n  }\n}));\n\nconst Categories = () => {\n  const classes = useStyles();\n\n  const _React$useState = React.useState([0]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        checked = _React$useState2[0],\n        setChecked = _React$useState2[1];\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h4\",\n    component: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Kategorijos\"), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, ['Džemperiai (15)', 'Nešiojamieji kompiuteriai (0)'].map(value => {\n    const labelId = \"checkbox-list-label-\".concat(value);\n    return React.createElement(ListItem, {\n      key: value,\n      role: undefined,\n      onClick: handleToggle(value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(ListItemIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      edge: \"start\",\n      checked: checked.indexOf(value) !== -1,\n      color: \"primary\",\n      tabIndex: -1,\n      disableRipple: true,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), React.createElement(ListItemText, {\n      id: labelId,\n      primary: \"\".concat(value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }));\n  })));\n};\n\nexport default Categories;","map":{"version":3,"sources":["/home/ruta/Documents/my_websites/auction/src/components/Item/AdvancedFilters/Categories.jsx"],"names":["React","makeStyles","List","ListItem","ListItemIcon","ListItemText","Checkbox","Typography","useStyles","theme","root","paddingLeft","paddingRight","spacing","Categories","classes","useState","checked","setChecked","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","map","labelId","undefined"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,MAAMC,SAAS,GAAGP,UAAU,CAACQ,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,WAAW,EAAE,MADT;AAEJC,IAAAA,YAAY,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AAFV;AAD+B,CAAL,CAAN,CAA5B;;AAOA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAMC,OAAO,GAAGP,SAAS,EAAzB;;AADuB,0BAEOR,KAAK,CAACgB,QAAN,CAAe,CAAC,CAAD,CAAf,CAFP;AAAA;AAAA,QAEhBC,OAFgB;AAAA,QAEPC,UAFO;;AAIvB,QAAMC,YAAY,GAAGC,KAAK,IAAI,MAAM;AAClC,UAAMC,YAAY,GAAGJ,OAAO,CAACK,OAAR,CAAgBF,KAAhB,CAArB;AACA,UAAMG,UAAU,GAAG,CAAC,GAAGN,OAAJ,CAAnB;;AAEA,QAAII,YAAY,KAAK,CAAC,CAAtB,EAAyB;AACvBE,MAAAA,UAAU,CAACC,IAAX,CAAgBJ,KAAhB;AACD,KAFD,MAEO;AACLG,MAAAA,UAAU,CAACE,MAAX,CAAkBJ,YAAlB,EAAgC,CAAhC;AACD;;AAEDH,IAAAA,UAAU,CAACK,UAAD,CAAV;AACD,GAXD;;AAaA,SACE;AAAK,IAAA,SAAS,EAAER,OAAO,CAACL,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,YAAY,MAAxB;AAAyB,IAAA,OAAO,EAAC,IAAjC;AAAsC,IAAA,SAAS,EAAC,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC,iBAAD,EAAoB,+BAApB,EAAqDgB,GAArD,CAAyDN,KAAK,IAAI;AACjE,UAAMO,OAAO,iCAA0BP,KAA1B,CAAb;AAEA,WACE,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,KAAf;AAAsB,MAAA,IAAI,EAAEQ,SAA5B;AAAuC,MAAA,OAAO,EAAET,YAAY,CAACC,KAAD,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,OAAO,EAAEH,OAAO,CAACK,OAAR,CAAgBF,KAAhB,MAA2B,CAAC,CAFvC;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,QAAQ,EAAE,CAAC,CAJb;AAKE,MAAA,aAAa,MALf;AAME,MAAA,UAAU,EAAE;AAAE,2BAAmBO;AAArB,OANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAWE,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAEA,OAAlB;AAA2B,MAAA,OAAO,YAAKP,KAAL,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADF;AAeD,GAlBA,CADH,CAJF,CADF;AA4BD,CA7CD;;AA+CA,eAAeN,UAAf","sourcesContent":["import React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: '2rem',\n    paddingRight: theme.spacing(1)\n  }\n}));\n\nconst Categories = () => {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([0]);\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Typography gutterBottom variant=\"h4\" component=\"h4\">\n        Kategorijos\n      </Typography>\n      <List>\n        {['Džemperiai (15)', 'Nešiojamieji kompiuteriai (0)'].map(value => {\n          const labelId = `checkbox-list-label-${value}`;\n\n          return (\n            <ListItem key={value} role={undefined} onClick={handleToggle(value)}>\n              <ListItemIcon>\n                <Checkbox\n                  edge=\"start\"\n                  checked={checked.indexOf(value) !== -1}\n                  color=\"primary\"\n                  tabIndex={-1}\n                  disableRipple\n                  inputProps={{ 'aria-labelledby': labelId }}\n                />\n              </ListItemIcon>\n              <ListItemText id={labelId} primary={`${value}`} />\n            </ListItem>\n          );\n        })}\n      </List>\n    </div>\n  );\n};\n\nexport default Categories;\n"]},"metadata":{},"sourceType":"module"}