{"ast":null,"code":"var _jsxFileName = \"/home/ruta/Documents/my_websites/auction/src/components/Items/ItemCard/ItemCard.jsx\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport Box from '@material-ui/core/Box';\nimport FavoriteIcon from '@material-ui/icons/Favorite'; // import { PanTool } from '@material-ui/icons';\n// import FormControl from '@material-ui/core/FormControl';\n// import Button from '@material-ui/core/Button';\n// import TextField from '@material-ui/core/TextField';\n// import Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles({\n  card: {\n    maxWidth: 250,\n    border: '1px solid #e4e4e4'\n  },\n  media: {\n    height: 0,\n    width: '100%',\n    paddingTop: '100%' // 1:1\n\n  }\n});\n\nconst ItemCard = ({\n  currentBid,\n  itemName,\n  timeUntilBidEnd\n}) => {\n  const classes = useStyles();\n  return React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(CardActionArea, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(CardMedia, {\n    className: classes.media,\n    image: \"https://i1.wp.com/thefrontline.org.uk/wp-content/uploads/2018/10/placeholder.jpg\",\n    title: \"Contemplative Reptile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h5\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, itemName), React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"ul\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Box, {\n    component: \"li\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Current: \".concat(currentBid, \" \\u20AC\")), React.createElement(Box, {\n    component: \"li\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"End after: \".concat(timeUntilBidEnd, \" Hour\")))), React.createElement(CardActions, {\n    disableSpacing: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"add to favorites\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(FavoriteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }))));\n};\n\nItemCard.propTypes = {\n  currentBid: PropTypes.number.isRequired,\n  itemName: PropTypes.string.isRequired,\n  timeUntilBidEnd: PropTypes.number.isRequired\n};\nexport default ItemCard;","map":{"version":3,"sources":["/home/ruta/Documents/my_websites/auction/src/components/Items/ItemCard/ItemCard.jsx"],"names":["React","makeStyles","PropTypes","Card","CardActionArea","CardMedia","CardContent","Typography","CardActions","IconButton","Box","FavoriteIcon","useStyles","card","maxWidth","border","media","height","width","paddingTop","ItemCard","currentBid","itemName","timeUntilBidEnd","classes","propTypes","number","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,YAAP,MAAyB,6BAAzB,C,CAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,SAAS,GAAGX,UAAU,CAAC;AAC3BY,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,GADN;AAEJC,IAAAA,MAAM,EAAE;AAFJ,GADqB;AAK3BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE,CADH;AAELC,IAAAA,KAAK,EAAE,MAFF;AAGLC,IAAAA,UAAU,EAAE,MAHP,CAGc;;AAHd;AALoB,CAAD,CAA5B;;AAYA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,QAAd;AAAwBC,EAAAA;AAAxB,CAAD,KAA+C;AAC9D,QAAMC,OAAO,GAAGZ,SAAS,EAAzB;AAEA,SACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEY,OAAO,CAACX,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,SAAS,EAAEW,OAAO,CAACR,KADrB;AAEE,IAAA,KAAK,EAAC,kFAFR;AAGE,IAAA,KAAK,EAAC,uBAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAQE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,YAAY,MAAxB;AAAyB,IAAA,OAAO,EAAC,IAAjC;AAAsC,IAAA,SAAS,EAAC,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,QADH,CADF,EAIE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,KAAK,EAAC,eAAlC;AAAkD,IAAA,SAAS,EAAC,IAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAiCD,UAAjC,aADF,EAEE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAmCE,eAAnC,WAFF,CAJF,CARF,EAkCE,oBAAC,WAAD;AAAa,IAAA,cAAc,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,kBAAW,kBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAlCF,CADF;AA0CD,CA7CD;;AA+CAH,QAAQ,CAACK,SAAT,GAAqB;AACnBJ,EAAAA,UAAU,EAAEnB,SAAS,CAACwB,MAAV,CAAiBC,UADV;AAEnBL,EAAAA,QAAQ,EAAEpB,SAAS,CAAC0B,MAAV,CAAiBD,UAFR;AAGnBJ,EAAAA,eAAe,EAAErB,SAAS,CAACwB,MAAV,CAAiBC;AAHf,CAArB;AAMA,eAAeP,QAAf","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport Box from '@material-ui/core/Box';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\n// import { PanTool } from '@material-ui/icons';\n// import FormControl from '@material-ui/core/FormControl';\n// import Button from '@material-ui/core/Button';\n// import TextField from '@material-ui/core/TextField';\n// import Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles({\n  card: {\n    maxWidth: 250,\n    border: '1px solid #e4e4e4'\n  },\n  media: {\n    height: 0,\n    width: '100%',\n    paddingTop: '100%' // 1:1\n  }\n});\n\nconst ItemCard = ({ currentBid, itemName, timeUntilBidEnd }) => {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.card}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image=\"https://i1.wp.com/thefrontline.org.uk/wp-content/uploads/2018/10/placeholder.jpg\"\n          title=\"Contemplative Reptile\"\n        />\n      </CardActionArea>\n      <CardContent>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {itemName}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"ul\">\n          <Box component=\"li\">{`Current: ${currentBid} â‚¬`}</Box>\n          <Box component=\"li\">{`End after: ${timeUntilBidEnd} Hour`}</Box>\n        </Typography>\n      </CardContent>\n      {/* <CardActions>\n        <FormControl fullWidth>\n          <Grid container spacing={2}>\n            <Grid item md={8}>\n              <TextField fullWidth id=\"your-bid\" variant=\"outlined\" label=\"Your bid\" />\n            </Grid>\n            <Grid item md={4}>\n              <Box mt={0.5}>\n                <Button color=\"primary\" fullWidth variant=\"contained\" size=\"large\">\n                  <Box mr={2} component={PanTool} />\n                  Bid\n                </Button>\n              </Box>\n            </Grid>\n          </Grid>\n        </FormControl>\n      </CardActions> */}\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\">\n          <FavoriteIcon />\n        </IconButton>\n      </CardActions>\n    </Card>\n  );\n};\n\nItemCard.propTypes = {\n  currentBid: PropTypes.number.isRequired,\n  itemName: PropTypes.string.isRequired,\n  timeUntilBidEnd: PropTypes.number.isRequired\n};\n\nexport default ItemCard;\n"]},"metadata":{},"sourceType":"module"}