{"ast":null,"code":"import _objectSpread from \"/home/ruta/Documents/my_websites/auction/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/ruta/Documents/my_websites/auction/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ruta/Documents/my_websites/auction/src/components/Search/Search.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport './Search.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DirectionsIcon from '@material-ui/icons/Directions';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nconst currencies = [{\n  value: 'USD',\n  label: '$'\n}, {\n  value: 'EUR',\n  label: '€'\n}, {\n  value: 'BTC',\n  label: '฿'\n}, {\n  value: 'JPY',\n  label: '¥'\n}];\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  menu: {\n    width: 200\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n}));\n\nfunction Search() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState({\n    name: 'Cat in the Hat',\n    age: '',\n    multiline: 'Controlled',\n    currency: 'EUR'\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        values = _React$useState2[0],\n        setValues = _React$useState2[1];\n\n  const handleChange = name => event => {\n    setValues(_objectSpread({}, values, {\n      [name]: event.target.value\n    }));\n  };\n\n  return React.createElement(\"form\", {\n    className: classes.container,\n    noValidate: true,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"outlined-select-currency\",\n    select: true,\n    label: \"Select\",\n    className: classes.textField,\n    value: values.currency,\n    onChange: handleChange('currency'),\n    SelectProps: {\n      MenuProps: {\n        className: classes.menu\n      }\n    },\n    margin: \"normal\",\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, currencies.map(option => React.createElement(MenuItem, {\n    key: option.value,\n    value: option.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, option.label))), React.createElement(InputBase, {\n    className: classes.input,\n    placeholder: \"Search...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(IconButton, {\n    className: classes.iconButton,\n    \"aria-label\": \"Search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(SearchIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })), React.createElement(Divider, {\n    className: classes.divider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(IconButton, {\n    color: \"primary\",\n    className: classes.iconButton,\n    \"aria-label\": \"Directions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(DirectionsIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  })));\n}\n\nexport default Search; // const Search = ({ categories }) => (\n//   <form className=\"form-inline\">\n//     <div className=\"input-group input-group-lg\" style={{ width: `${100}%` }}>\n//       <select\n//         class=\"selectpicker\"\n//         data-style=\"btn btn-primary btn-round\"\n//         title=\"Single Select\"\n//         data-size=\"7\"\n//       >\n//         <option disabled selected>\n//           Choose city\n//         </option>\n//         <option value=\"2\">Foobar</option>\n//         <option value=\"3\">Is great</option>\n//       </select>\n//       <input\n//         type=\"text\"\n//         className=\"form-control rounded-0\"\n//         id=\"search-query\"\n//         placeholder=\"Search...\"\n//         style={{ width: `${50}%` }}\n//       />\n//       <button\n//         type=\"button\"\n//         className=\"btn btn-lg btn-primary rounded-0 border-right\"\n//       >\n//         Search\n//       </button>\n//     </div>\n//   </form>\n// );\n// Search.propTypes = {\n//   categories: PropTypes.arrayOf(PropTypes.string).isRequired\n// };\n// export default Search;\n\n{\n  /* <select\n        className=\"form-control rounded-0\"\n        id=\"categories\"\n        style={{ width: `${10}%` }}\n      >\n        <option selected>All</option>\n        {categories.map(category => (\n          <option>{category}</option>\n        ))}\n      </select> */\n}","map":{"version":3,"sources":["/home/ruta/Documents/my_websites/auction/src/components/Search/Search.jsx"],"names":["React","PropTypes","clsx","makeStyles","Paper","InputBase","Divider","IconButton","SearchIcon","DirectionsIcon","TextField","MenuItem","currencies","value","label","useStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","menu","width","input","flex","iconButton","padding","divider","height","margin","Search","classes","useState","name","age","multiline","currency","values","setValues","handleChange","event","target","MenuProps","className","map","option"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport './Search.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DirectionsIcon from '@material-ui/icons/Directions';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst currencies = [\n  {\n    value: 'USD',\n    label: '$'\n  },\n  {\n    value: 'EUR',\n    label: '€'\n  },\n  {\n    value: 'BTC',\n    label: '฿'\n  },\n  {\n    value: 'JPY',\n    label: '¥'\n  }\n];\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  menu: {\n    width: 200\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4\n  }\n}));\n\nfunction Search() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    name: 'Cat in the Hat',\n    age: '',\n    multiline: 'Controlled',\n    currency: 'EUR'\n  });\n\n  const handleChange = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  return (\n    <form className={classes.container} noValidate autoComplete=\"off\">\n      <TextField\n        id=\"outlined-select-currency\"\n        select\n        label=\"Select\"\n        className={classes.textField}\n        value={values.currency}\n        onChange={handleChange('currency')}\n        SelectProps={{\n          MenuProps: {\n            className: classes.menu\n          }\n        }}\n        margin=\"normal\"\n        variant=\"outlined\"\n      >\n        {currencies.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <InputBase className={classes.input} placeholder=\"Search...\" />\n      <IconButton className={classes.iconButton} aria-label=\"Search\">\n        <SearchIcon />\n      </IconButton>\n      <Divider className={classes.divider} />\n      <IconButton\n        color=\"primary\"\n        className={classes.iconButton}\n        aria-label=\"Directions\"\n      >\n        <DirectionsIcon />\n      </IconButton>\n    </form>\n  );\n}\n\nexport default Search;\n\n// const Search = ({ categories }) => (\n//   <form className=\"form-inline\">\n//     <div className=\"input-group input-group-lg\" style={{ width: `${100}%` }}>\n\n//       <select\n//         class=\"selectpicker\"\n//         data-style=\"btn btn-primary btn-round\"\n//         title=\"Single Select\"\n//         data-size=\"7\"\n//       >\n//         <option disabled selected>\n//           Choose city\n//         </option>\n//         <option value=\"2\">Foobar</option>\n//         <option value=\"3\">Is great</option>\n//       </select>\n//       <input\n//         type=\"text\"\n//         className=\"form-control rounded-0\"\n//         id=\"search-query\"\n//         placeholder=\"Search...\"\n//         style={{ width: `${50}%` }}\n//       />\n//       <button\n//         type=\"button\"\n//         className=\"btn btn-lg btn-primary rounded-0 border-right\"\n//       >\n//         Search\n//       </button>\n//     </div>\n//   </form>\n// );\n\n// Search.propTypes = {\n//   categories: PropTypes.arrayOf(PropTypes.string).isRequired\n// };\n\n// export default Search;\n\n{\n  /* <select\n        className=\"form-control rounded-0\"\n        id=\"categories\"\n        style={{ width: `${10}%` }}\n      >\n        <option selected>All</option>\n        {categories.map(category => (\n          <option>{category}</option>\n        ))}\n      </select> */\n}\n"]},"metadata":{},"sourceType":"module"}