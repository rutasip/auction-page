{"ast":null,"code":"var _jsxFileName = \"/home/ruta/Documents/my_websites/auction/src/containers/RegisterUser.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport RegisterForm from '../components/Account/RegisterForm';\nimport EmailInput from '../components/Account/EmailInput';\nimport PasswordInput from '../components/Account/PasswordInput';\nimport { userActions } from '../actions';\nimport AgreeWithPoliciesCheckbox from '../components/Account/AgreeWithPoliciesCheckbox';\n\nclass RegisterUser extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      repeatPassword: '',\n      agreeWithPolicies: false,\n      submitted: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handlePolicies = this.handlePolicies.bind(this);\n  }\n\n  handleChange(e) {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handlePolicies() {\n    const agreeWithPolicies = this.state.agreeWithPolicies;\n    this.setState({\n      agreeWithPolicies: !agreeWithPolicies\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.setState({\n      submitted: true\n    });\n    const dispatch = this.props.dispatch;\n    const _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n    dispatch(userActions.register(email, password));\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          submitted = _this$state2.submitted,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          repeatPassword = _this$state2.repeatPassword,\n          agreeWithPolicies = _this$state2.agreeWithPolicies;\n    const _this$props = this.props,\n          processing = _this$props.processing,\n          error = _this$props.error,\n          success = _this$props.success;\n    return React.createElement(RegisterForm, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Form state status:\", processing && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Processing\") || error && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Error\") || success && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Success\"), React.createElement(EmailInput, {\n      onChange: this.handleChange,\n      submitted: submitted,\n      value: email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(PasswordInput, {\n      onChange: this.handleChange,\n      submitted: submitted,\n      value: password,\n      name: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(PasswordInput, {\n      onChange: this.handleChange,\n      submitted: submitted,\n      value: repeatPassword,\n      name: \"repeatPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(AgreeWithPoliciesCheckbox, {\n      onChange: this.handlePolicies,\n      checked: agreeWithPolicies,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const _state$userRegistrati = state.userRegistration,\n        processing = _state$userRegistrati.processing,\n        success = _state$userRegistrati.success,\n        error = _state$userRegistrati.error;\n  return {\n    processing,\n    success,\n    error\n  };\n};\n\nRegisterUser.defaultProps = {\n  processing: false,\n  error: null,\n  success: false\n};\nRegisterUser.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  processing: PropTypes.bool,\n  error: PropTypes.string,\n  success: PropTypes.bool\n};\nexport default connect(mapStateToProps)(RegisterUser);","map":{"version":3,"sources":["/home/ruta/Documents/my_websites/auction/src/containers/RegisterUser.jsx"],"names":["React","connect","PropTypes","RegisterForm","EmailInput","PasswordInput","userActions","AgreeWithPoliciesCheckbox","RegisterUser","Component","constructor","props","state","email","password","repeatPassword","agreeWithPolicies","submitted","handleChange","bind","handleSubmit","handlePolicies","e","target","name","value","setState","preventDefault","dispatch","register","render","processing","error","success","mapStateToProps","userRegistration","defaultProps","propTypes","func","isRequired","bool","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport RegisterForm from '../components/Account/RegisterForm';\nimport EmailInput from '../components/Account/EmailInput';\nimport PasswordInput from '../components/Account/PasswordInput';\nimport { userActions } from '../actions';\nimport AgreeWithPoliciesCheckbox from '../components/Account/AgreeWithPoliciesCheckbox';\n\nclass RegisterUser extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: '',\n      repeatPassword: '',\n      agreeWithPolicies: false,\n      submitted: false\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handlePolicies = this.handlePolicies.bind(this);\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  }\n\n  handlePolicies() {\n    const { agreeWithPolicies } = this.state;\n\n    this.setState({\n      agreeWithPolicies: !agreeWithPolicies\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    this.setState({ submitted: true });\n    const { dispatch } = this.props;\n    const { email, password } = this.state;\n\n    dispatch(userActions.register(email, password));\n  }\n\n  render() {\n    const { submitted, email, password, repeatPassword, agreeWithPolicies } = this.state;\n    const { processing, error, success } = this.props;\n\n    return (\n      <RegisterForm onSubmit={this.handleSubmit}>\n        Form state status:\n        {(processing && <span>Processing</span>) ||\n          (error && <span>Error</span>) ||\n          (success && <span>Success</span>)}\n        <EmailInput onChange={this.handleChange} submitted={submitted} value={email} />\n        <PasswordInput\n          onChange={this.handleChange}\n          submitted={submitted}\n          value={password}\n          name=\"password\"\n        />\n        <PasswordInput\n          onChange={this.handleChange}\n          submitted={submitted}\n          value={repeatPassword}\n          name=\"repeatPassword\"\n        />\n        <AgreeWithPoliciesCheckbox onChange={this.handlePolicies} checked={agreeWithPolicies} />\n      </RegisterForm>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { processing, success, error } = state.userRegistration;\n\n  return { processing, success, error };\n};\n\nRegisterUser.defaultProps = {\n  processing: false,\n  error: null,\n  success: false\n};\n\nRegisterUser.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  processing: PropTypes.bool,\n  error: PropTypes.string,\n  success: PropTypes.bool\n};\n\nexport default connect(mapStateToProps)(RegisterUser);\n"]},"metadata":{},"sourceType":"module"}