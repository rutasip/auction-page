{"ast":null,"code":"var _jsxFileName = \"/home/ruta/Documents/my_websites/auction/src/containers/AuthenticateUser.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport { userActions } from '../actions/user.actions';\nimport Login from '../components/Account/Login/Login';\n\nclass AuthenticateUser extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n    const dispatch = this.props.dispatch;\n\n    if (email && password) {\n      dispatch(userActions.login(email, password));\n    }\n  }\n\n  render() {\n    const loggingIn = this.props.loggingIn;\n    const _this$state2 = this.state,\n          email = _this$state2.email,\n          password = _this$state2.password;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"User ID:\", React.createElement(Login, {\n      onSubmit: this.handleSubmit,\n      onChange: this.handleChange,\n      email: email,\n      password: password,\n      loggingIn: loggingIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  const loggingIn = state.userAuthentication.loggingIn;\n  return {\n    loggingIn\n  };\n}\n\nAuthenticateUser.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  loggingIn: PropTypes.bool.isRequired\n};\nexport default connect(mapStateToProps)(AuthenticateUser);","map":{"version":3,"sources":["/home/ruta/Documents/my_websites/auction/src/containers/AuthenticateUser.jsx"],"names":["React","connect","PropTypes","userActions","Login","AuthenticateUser","Component","constructor","props","state","email","password","handleChange","bind","handleSubmit","e","target","name","value","setState","preventDefault","dispatch","login","render","loggingIn","mapStateToProps","userAuthentication","propTypes","func","isRequired","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,KAAP,MAAkB,mCAAlB;;AAEA,MAAMC,gBAAN,SAA+BL,KAAK,CAACM,SAArC,CAA+C;AAC7CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAKA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAACG,CAAD,EAAI;AAAA,sBACUA,CAAC,CAACC,MADZ;AAAA,UACNC,IADM,aACNA,IADM;AAAA,UACAC,KADA,aACAA,KADA;AAEd,SAAKC,QAAL,CAAc;AAAE,OAACF,IAAD,GAAQC;AAAV,KAAd;AACD;;AAEDJ,EAAAA,YAAY,CAACC,CAAD,EAAI;AACdA,IAAAA,CAAC,CAACK,cAAF;AADc,wBAGc,KAAKX,KAHnB;AAAA,UAGNC,KAHM,eAGNA,KAHM;AAAA,UAGCC,QAHD,eAGCA,QAHD;AAAA,UAINU,QAJM,GAIO,KAAKb,KAJZ,CAINa,QAJM;;AAMd,QAAIX,KAAK,IAAIC,QAAb,EAAuB;AACrBU,MAAAA,QAAQ,CAAClB,WAAW,CAACmB,KAAZ,CAAkBZ,KAAlB,EAAyBC,QAAzB,CAAD,CAAR;AACD;AACF;;AAEDY,EAAAA,MAAM,GAAG;AAAA,UACCC,SADD,GACe,KAAKhB,KADpB,CACCgB,SADD;AAAA,yBAEqB,KAAKf,KAF1B;AAAA,UAECC,KAFD,gBAECA,KAFD;AAAA,UAEQC,QAFR,gBAEQA,QAFR;AAIP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEE,oBAAC,KAAD;AACE,MAAA,QAAQ,EAAE,KAAKG,YADjB;AAEE,MAAA,QAAQ,EAAE,KAAKF,YAFjB;AAGE,MAAA,KAAK,EAAEF,KAHT;AAIE,MAAA,QAAQ,EAAEC,QAJZ;AAKE,MAAA,SAAS,EAAEa,SALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAYD;;AA7C4C;;AAgD/C,SAASC,eAAT,CAAyBhB,KAAzB,EAAgC;AAAA,QACtBe,SADsB,GACRf,KAAK,CAACiB,kBADE,CACtBF,SADsB;AAG9B,SAAO;AACLA,IAAAA;AADK,GAAP;AAGD;;AAEDnB,gBAAgB,CAACsB,SAAjB,GAA6B;AAC3BN,EAAAA,QAAQ,EAAEnB,SAAS,CAAC0B,IAAV,CAAeC,UADE;AAE3BL,EAAAA,SAAS,EAAEtB,SAAS,CAAC4B,IAAV,CAAeD;AAFC,CAA7B;AAKA,eAAe5B,OAAO,CAACwB,eAAD,CAAP,CAAyBpB,gBAAzB,CAAf","sourcesContent":["import React from 'react';\n\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport { userActions } from '../actions/user.actions';\nimport Login from '../components/Account/Login/Login';\n\nclass AuthenticateUser extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const { email, password } = this.state;\n    const { dispatch } = this.props;\n\n    if (email && password) {\n      dispatch(userActions.login(email, password));\n    }\n  }\n\n  render() {\n    const { loggingIn } = this.props;\n    const { email, password } = this.state;\n\n    return (\n      <React.Fragment>\n        User ID:\n        <Login\n          onSubmit={this.handleSubmit}\n          onChange={this.handleChange}\n          email={email}\n          password={password}\n          loggingIn={loggingIn}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { loggingIn } = state.userAuthentication;\n\n  return {\n    loggingIn\n  };\n}\n\nAuthenticateUser.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  loggingIn: PropTypes.bool.isRequired\n};\n\nexport default connect(mapStateToProps)(AuthenticateUser);\n"]},"metadata":{},"sourceType":"module"}